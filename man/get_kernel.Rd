% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotKernel.R
\name{get_kernel}
\alias{get_kernel}
\alias{coef.SWR}
\alias{plot_kernel}
\alias{plot.SWR}
\title{Return and plot accumulated kernel}
\usage{
get_kernel(param, mix = NULL, kernel_type = "single", weighted = TRUE)

\method{coef}{SWR}(object, ...)

plot_kernel(
  list = NULL,
  param = NULL,
  mix = NULL,
  kernel_type = "single",
  weighted = TRUE,
  xlim = NULL,
  include_text = TRUE
)

\method{plot}{SWR}(x, type = "kernel", ...)
}
\arguments{
\item{param}{a matrix with 2 columns representing one window per row. The first column contains location parameters delta, the second column contains the standard deviation sigma.}

\item{mix}{a vector of mixing parameters (beta)}

\item{kernel_type}{a String indicating whether (a) all single windows (option: "single"), or (b) the combined kernel (option "combined")}

\item{weighted}{if TRUE, windows are weighted with mix parameters; default: TRUE}

\item{object}{an \code{SWR} model object created using \link{trainSWR}}

\item{...}{further plotting parameters, see  \link{plot_kernel} or \link{plot_prediction}, respectively}

\item{list}{a list containing multiple trained SlidingWindowReg models}

\item{xlim}{vector with lower / upper bound of the x axis to print the kernel}

\item{include_text}{if TRUE, plots will be annotated}

\item{x}{an \code{SWR} model object}

\item{type}{either "kernel" to produce a plot of the window kernels, or "prediction" to plot the model predictions, see \link{plot_prediction}}
}
\description{
Return and plot the accumulated kernel, consisting of one or multiple windows
}
\section{Functions}{
\itemize{
\item \code{get_kernel()}: return the kernel of an \code{SWR} model

\item \code{coef(SWR)}: return the kernel of an \code{SWR} model

\item \code{plot_kernel()}: plot the kernel of an \code{SWR} model

\item \code{plot(SWR)}: plot the kernel of an \code{SWR} model

}}
\examples{
param <- cbind(
  delta = c(0, 10),
  sigma = c(2, 3))
mix <- rep(1, ncol(param))
mod <- createSWR(param = param, mix = mix)

get_kernel(param = param, mix = mix)
coef(mod)

plot_kernel(param = param, mix = mix)
plot(mod, type = "kernel")
}
